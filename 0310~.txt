

(1)
리눅스Linux - 
	Window와 같은 시스템 운영체제의 일종. 
	Unix에서 영향받아 개발되었다.
	다수의 유저가 동시에 접속할 수 있다.
	커널 기반의 오픈소스 OS. 커널, 내장프로그램 등의 부분이 오픈소스이다.
	프로그램의 이식성, 유연성, 확장성이 좋다.

종류 - 우분투, 레드햇, CentOS, 데비안
	우분투 - 
		개인PC, 서버 또는 IoT개발에 적합한 리눅스 배포판의 일종.
		리눅스의 유사한 점이 많음
		데비안 기반의 무료 오픈소스 OS
				

(2)
리눅스의 압축파일 확장자: .tar.gz란? - tar와 gzip을 합친 것으로 gzip형식으로 압축한 tar파일을 말한다.
	*tar - 리눅스 환경에서 사용하는 여러 파일을 하나로 묶는 개념
	*gz(gzip:파일압축형식명) - 해당 파일 확장자.


(3)
Q. java문법의 배열과 컬렉션의 차이를 서술하고 컬렉션의 종류 및 특징을 서술하라.

java -
	배열 - 
		여러 변수를 저장하는 자료구조로, 선언 시 처음 정해진 길이 조절이 불가하고 만들어진 객체는 heap메모리에 저장된다.
	컬렉션 - 
		여러 자료구조를 묶은 인터페이스를 일컫는 말로, 기존의 배열보다 데이터 처리에 용이하다.
		아래의 인터페이스 사용을 위해서는 Collection인터페이스를 상속받아야 한다.

컬렉션 종류 - 
	List - 순서가 있는 데이터의 집합, 중복을 허용
		(클래스: LinkedList, Stack, Vector, ArrayList )
	Set - 순서가 없는 데이터의 집합, 중복을 허용하지 않음
		(클래스: HashSet, TreeSet(aka SortedSet))
	Map - 키(Key)와 값(Value)의 쌍으로 이루어진 데이터의 집합, 순서가 없으며, 키만 중복을 허용하지 않음.
		(클래스: HashMap, TreeMap(aka SortedMap), HashTable, Properties)


(4)
Q. 화씨 온도를 섭씨로 바꾸고 섭씨 온도를 화씨로 바꾸는 코드를 java와 파이썬으로 작성해보시오.
(공식)
	섭->화 : (X°C × 9/5) + 32 = ?
	화->섭 : (X°F − 32) × 5/9 = ?


파이썬 - 

x = float(input())

print(f" 화씨: {round((x * 9/5) + 32, 2)} °F")
print(f" 섭씨: {round((x - 32) * 5/9, 2)} °C")


자바 -

import java.util.*;
import java.lang.*;
import java.io.*;
import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double x = sc.nextDouble();
        System.out.printf("화씨: %.2f °F \n", (x * 9/5) + 32);
        System.out.printf("섭씨: %.2f °C", (x - 32) * 5/9);

        sc.close();
    }
}















<강의_0310>

###OS 종류### 
	Window, Unix, Linux

####Unix란?#### 
	1969년 Bell연구소 Ken Tompson이 개발
	멀티유저 및 멀티테스킹 기능이 가능하도록 만듦
	stand alone: 개인이 사용함을 의미

####Linux란?#### 
	Unix 타입의 운영체제
	개인용 PC에서 멀티테스킹을 구현하기 위한 운영체제로 개발 시작. (일명 PC용 Unix)
	역시 소스코드 공개. (무료가 되기 시작)
	여러 개발자가 기능을 추가하여 Linux가 됨

####리눅스 특징####
##장점 (OS특징과 같음. 특별한것 없음)
	Unix와 완벽하게 호환 가능
	공개 무료 운영체제
	다른PC운영체제보다 안정적
	하드웨어의 기능을 효과적으로 사용
	강력한 네트워크 구축 가능
	다양한 응용프로그램 제공
	다중 작업(Multi Tasking)이 가능
	인터넷 기능 지원

##단점
	공개 운영체제이므로 문제접 발생 시 보상 어려움
	보안에 취약할 것이라고 생각함

##embedded: 임베디드 arm 

### 리눅스 종류 ####
ㅁ Debian 계열
	- Debian
	- Ubuntu
ㅁ Redhat 계열 
	- redhat
		: redhat이 개발, 라이센스가 있다. (RHEL :레드헷 엔터프라이즈 버전)
		쉬운 인스톨러 (RPM)과 관리 툴이 있다.
	- centOS (redhat에서 나와서 만든 것)
		: RedHat Enterprise Linux(RHEL)를 기반으로 한 무료 배포판
	- Fedora (redhat계열)  // Do tou know Fedora 모자?
		: Redhat 기반



<실습_0310>

virtual box 다운로드
	https://www.virtualbox.org/ 로 가서 설치
	(6버전 설치하려면 상단에 보이는 download
		-우측 아래로 가서 old(-> previous release)클릭 후 VirtualBox 6.1.44아래의 windows hosts 클릭하여 다운로드)
		>> https://www.virtualbox.org/wiki/Download_Old_Builds_6_1 <<



## 가상파일 만들기 ###

	vbox - 새로 만들기 - 이름(ubuntu_22.04.5)주고 - 다음 - 2048mb - 다음 -
	지금 새 가상 하드디스크 만들기 - 만들기 - vdi - 다음 - 동적할당 - 다음 - 
	폴더 위치는 그대로 두고 - 아래 를 30.00Gb 설정 - [만들기] 클릭

### 네트워크 어댑터
	작업 전 일반 vbox의 좌산단 도구로 가서 우측 상단에 보이는 virtualbox host-only ethernet adapter 중 1st [사용함]에 체트하고 하단 DHCP서버탭을 클릭하여 [서버사용함]에 체크한다. - [적용]

	#. 설정 - 네트워크 - 어댑터 1 탭은 NAT
	어댑터 2 는 host-only 어댑터 - [확인] 설정
	*(참고) 이런 설정도 있음 
	설정 - 네트워크 - 어댑터 1 탭은 NAT 
	어댑터 2 탭은 어댑터에 브릿지 -[확인]







##> CD 삽입
	설정 - 저장소 - 비어있음 - 동그라미아이콘 -> 가상관학디스크선택/만들기 클릭 - 상단추가 아이콘 눌러 다운받은 ubuntu-22.04.5-desktop-amd64.sio 선택

###. cpu 2개 정도로
	설정 - 시스텐 - 프로세서 탭 - 2개로

## 디스플레이 조정
	설정 - 디스플레이 - 상단 화면 탭 - 비디오 메모리는 128mb - 그래픽 컨트롤러는 필요시 선택을 하고 - (확인)
	*(참고) 	VMSVGA : 리눅스 운체에서 권장되는 기본 설정
		VBOXVGA : 이전 버전의 리눅스 및 윈도우 게스트 운체 등에서 사용
		VBOXSVGA : VirtualBox의 기본 설정으로 최신 리눅스 및 윈도우 게스트인 경우 선택
	


## ubuntu desktop 설치 시작하기
	#. 왼쪽 우분투 메뉴 - 마오 - 시작 - 일반시작 (1st메뉴: install 우분투 클릭)
 	#. 왼쪽에서 한국어 선택, 우측에서 [ubuntu설치] 버튼을 클릭


(설치 진행)
	install welcome화면에서 아래로 내려 "한국어" 선택 (한글로바뀜)
	
	-{우분투 설치} 클릭
	- 키보드레이아웃에서 선택된 한글을 확인하고 우측 아래 [계속하기] 클릭
	(만일 계속하기 안보이면 우측 아래 모서리 를 당겨서 화면 크게하면 보임)
	- "ubntu설치중 업데이트 다운로드" 클릭 해제 후 [계속하기] 클릭
	- 바뀐점을 디스크에 ~~` [계속하기]- 지도와 seoul 보이면 - [계속하기] - 당신은 누구입니까? 에는 이름에 ondal 컴퓨터 이름 나오는것 암호는 moya - 암호확인에 moya - 계속하기 
	(참고_) 우분투는 보안때문에 root를 안 만들어주고 관리자 ㅣ모드로 처리한다.


	- [ 지금다시시작] 눌러 재부팅

- ~ remove install medium,  press 엔터 나오면 엔터.
	(가상시스템은 다시 설치시작 안함- 자동으로 iso제거)
	(가상시스템이 아니면 실제 usb나 cd를제거하라는 말, 안하면 다시 인스톨 시작)

	- 파일 - 닫기 - 시스텐 끄기 로 안전히 끈 다음,
	제거된 iso를 다시 연결하기 위해 파일 - 저장소 -iso들어있는 폴더의 우분투iso를 선택하고
	// 여기서 '비어있음'이 primary master, 다시 추가한 우분투iso가 primary slave 여야만 인스톨할때 생성한 유저 정보가 나옴. (우분투iso를 master지정하면 재설치를 반복해야함)	

 다시 vbox에서 가동하면 메뉴가 4개정도 나오고 첫 번째 선택하고나오는 install화면에서 우측 상단 x 기호를 눌러 quit한 후 닫는다. (설치버튼 안 누름)





#### VirtualBox 에러 e_fail {~~4005} virtualboxWrap 뜬 경우:
	C:\Users\user\.VirtualBox << 폴더 완전삭제
	vb재부팅 	// 가상머신시스템 초기화되어있음
	>> 가져오기 누르지말고,
	C:\Users\user\VirtualBox VMs 가상머신 내 파란박스 클릭 (이미지(빨간박스)x vb_machine파일 )
	>> vb창에 가상머신 시스템이 복원됨
	
	

	*(참고) 용어
	네트워크 어댑터 : 랜카드
	DHCP서버 : DHCP는 Dynamic Host Configration Protocal로 IP등을 자동으로 할당하고 관리하는 서버.
	NAT : Network Address Translation 으로 인터넷 공유기처럼 사설 ip to 공인ip 및 그 역방향을 하게 해주는 것. 
	즉, 여러개의 내부 사설ip가 1개의 공인ip를 통해 외부통신이 가능하도록 해주는 것으로 하나의 인터넷주소로 여러대가 인터넷 사용이 가능하게 한다.


	*(참고) 네트워크 연결의 종류
	1) 브짓지 : 호스트와 게스트를 하나로 연결시켜 하나의 네트워크로 사용하는 것으로 호스트와 게스트가 동등하게 여겨지며 같은 ip대역을 가짐

	2) NAT : 게스트가 호스트의 하위부분에 있는 방식으로 게스트는 DHCP에서 내부ip를 받아오며 게스트는 호스트와 다른 ip대역을 가짐 외부에서 게스트가 있는 지는 알 수 없으며 게스트가 외부로 연결되는 것은 가능하다.

	3) Host-only : 게스트가 호스트의 하위부분에 있으며 NAT라우터가 없는 방식이기에 게스트의 외부 연결이 불가능한 방식이다. 게스트는 호스트와 다른 ip대역을 가진다.	







### 우분투 마우스 -> ctrl_alt_del 윈도우로 탈출
----------------------------------------------------


----------------------------------------------------


### 
	$su root
	root 비번입력  // root모드로 변환
	root@ondal-VirtualBox:/home/ondal/# cd ~   // 디렉토리 꼭대기로 감(아래처럼)
	root@ondal-VirtualBox:~#pwd/root


	exit // root모드 해제


###### .vdi 사용하기 (ubuntu_22.04.3_ohye5 폴더)
	우분투 데스크탑을 기본 설치한 수 다른 컴이나 외장하드에 vdi관련파일을 복사 이동시킨 후 리눅스 사용을 계속할 수 있다.

	(방법)
	### 정닥한 위치(D드라이브, 외장하드(느림))에 복사된 .vbox .vdi .vbox-prev 등이 들어있는 폴더이름을 확인한다. 
	예: ubuntu_22.04.3_ohe5)
	(주로 C:\사용자\VirtualBox VMs\아래에 있다는~~~그렇다는~~)

### pc본체에 설치된 vb를 연다.
	그런다음 머신 - 추가를 통해 해당 폴더를 선택한다.
	(필요시) 설정을 눌러 디스플레이 - 네트워크 등을 설치된 상태로 만들어준다.



0311

### 우분투 마우스 -> ctrl_alt_del 윈도우로 탈출



##> CD 삽입
	설정 - 저장소 - 비어있음 - 동그라미아이콘 -> 가상관학디스크선택/만들기 클릭 - 상단추가 아이콘 눌러 다운받은 ubuntu-22.04.5-desktop-amd64.sio 선택

###. cpu 2개 정도로
	설정 - 시스텐 - 프로세서 탭 - 2개로

## 디스플레이 조정
	설정 - 디스플레이 - 상단 화면 탭 - 비디오 메모리는 128mb - 그래픽 컨트롤러는 필요시 선택을 하고 - (확인)
	*(참고) 	VMSVGA : 리눅스 운체에서 권장되는 기본 설정
		VBOXVGA : 이전 버전의 리눅스 및 윈도우 게스트 운체 등에서 사용
		VBOXSVGA : VirtualBox의 기본 설정으로 최신 리눅스 및 윈도우 게스트인 경우 선택
	
	

	*(참고) 용어
	네트워크 어댑터 : 랜카드
	DHCP서버 : DHCP는 Dynamic Host Configration Protocal로 IP등을 자동으로 할당하고 관리하는 서버.
	NAT : Network Address Translation 으로 인터넷 공유기처럼 사설 ip to 공인ip 및 그 역방향을 하게 해주는 것. 
	즉, 여러개의 내부 사설ip가 1개의 공인ip를 통해 외부통신이 가능하도록 해주는 것으로 하나의 인터넷주소로 여러대가 인터넷 사용이 가능하게 한다.


	*(참고) 네트워크 연결의 종류
	1) 브짓지 : 호스트와 게스트를 하나로 연결시켜 하나의 네트워크로 사용하는 것으로 호스트와 게스트가 동등하게 여겨지며 같은 ip대역을 가짐

	2) NAT : 게스트가 호스트의 하위부분에 있는 방식으로 게스트는 DHCP에서 내부ip를 받아오며 게스트는 호스트와 다른 ip대역을 가짐 외부에서 게스트가 있는 지는 알 수 없으며 게스트가 외부로 연결되는 것은 가능하다.

	3) Host-only : 게스트가 호스트의 하위부분에 있으며 NAT라우터가 없는 방식이기에 게스트의 외부 연결이 불가능한 방식이다. 게스트는 호스트와 다른 ip대역을 가진다.	



### 네트워크 어댑터
	작업 전 일반 vbox의 좌산단 도구로 가서 우측 상단에 보이는 virtualbox host-only ethernet adapter 중 1st [사용함]에 체트하고 하단 DHCP서버탭을 클릭하여 [서버사용함]에 체크한다. - [적용]

	#. 설정 - 네트워크 - 어댑터 1 탭은 NAT
	어댑터 2 는 host-only 어댑터 - [확인] 설정
	*(참고) 이런 설정도 있음 
	설정 - 네트워크 - 어댑터 1 탭은 NAT 
	어댑터 2 탭은 어댑터에 브릿지 -[확인]


## ubuntu desktop 설치 시작하기
	#. 왼쪽 우분투 메뉴 - 마오 - 시작 - 일반시작 (1st메뉴: install 우분투 클릭)
 	#. 왼쪽에서 한국어 선택, 우측에서 [ubuntu설치] 버튼을 클릭


(설치 진행)
	install welcome화면에서 아래로 내겨 "한국어" 선택 (한글로바뀜)
	
	-{우분투 설치} 클릭
	- 키보드레이아웃에서 선택된 한글을 확인하고 우측 아래 [계속하기] 클릭
	(만일 계속하기 안보이면 우측 아래 모서리 를 당겨서 화면 크게하면 보임)
	- "ubntu설치중 업데이트 다운로드" 클릭 해제 후 [계속하기] 클릭
	- 바뀐점을 디스크에 ~~` [계속하기]- 지도와 seoul 보이면 - [계속하기] - 당신은 누구입니까? 에는 이름에 ondal 컴퓨터 이름 나오는것 암호는 moya - 암호확인에 moya - 계속하기 
	(참고_) 우분투는 보안때문에 root를 안 만들어주고 관리자 ㅣ모드로 처리한다.


	- [ 지금다시시작] 눌러 재부팅

- ~ remove install medium,  press 엔터 나오면 엔터.
	(가산시스템은 다시 설치시작 안함- 자동으로 iso제거)
	(가상시스템이 아니면 실제 usb나 cd를제거하라는 말, 안하면 다시 인스톨 시작)

	- 파일 - 닫기 - 시스텐 끄기 로 안전히 끈 다음,
	제거된 iso를 다시 연결하기 위해 파일 - 저장소 -iso들어있는 폴더의 우분투iso를 선택하고 다시 vbox에서 가동하면 메뉴가 4개정도 나오고 첫 번째 선택하고나오는 install화면에서 우측 상단 x 기호를 눌러 quit한 후 닫는다. (설치버튼 안 누름)


----------------------------------------------------


----------------------------------------------------


### 
	$su root
	root 비번입력  // root모드로 변환
	root@ondal-VirtualBox:/home/ondal/# cd ~   // 디렉토리 꼭대기로 감(아래처럼)
	root@ondal-VirtualBox:~#pwd/root


	exit // root모드 해제


###### .vdi 사용하기 (ubuntu_22.04.3_ohye5 폴더)
	우분투 데스크탑을 기본 설치한 수 다른 컴이나 외장하드에 vdi관련파일을 복사 이동시킨 후 리눅스 사용을 계속할 수 있다.

	(방법)
	### 정닥한 위치(D드라이브, 외장하드(느림))에 복사된 .vbox .vdi .vbox-prev 등이 들어있는 폴더이름을 확인한다. 
	예: ubuntu_22.04.3_ohe5)
	(주로 C:\사용자\VirtualBox VMs\아래에 있다는~~~그렇다는~~)

### pc본체에 설치된 vb를 연다.
	그런다음 머신 - 추가를 통해 해당 폴더를 선택한다.
	(필요시) 설정을 눌러 디스플레이 - 네트워크 등을 설치된 상태로 만들어준다.



리눅스 유닉스
	# ==> admin
	$ ==> general user

			l-- pc
	리눅스 서버 ------ㅣ-- pc	(터미널)
			l-- pc

	shell : 유저와 시스템 사이의 다리역할(명령해석기)


	*MAC프롬프트:    ms-dos	command.com  msdos.sys	io.sys
	** 가장 앞이ㅁ . 으로 시작하는 파일 - 숨겨진파일


	unix shell 종류
	1) B shell (Bourne shell): AT&T사의 Steven Bourne이 만듦. 최초 unix shell
		/sh prompt :$	종료: ctrl+d
	2) C shell (버클리대 Bill Joy) 	
		/csh prompt :%     종료: ctrl+d / logout
		환경설정 파일: .cshrc   login
	3) K shell (Korn shell): AT&T사의 David Korn이 만듦.   
		/ksh prompt :$	b쉘과 c쉘의 장점을 합침   종료: ctrl+d / exit
		.profile  .sh_history
	
	### linux shell
	-) Bash shell이라고도 함. 
		/bash (bourne again shell)


0312



	### vi	*vim (vi improved) 
	      입력모드(소스코드편집기) <=> 명령모드   a/i/o눌러서 입력모드진입, esc눌러 명령모드진입

	### c	c++	java	c#	
	### java : c와 달리 포인터가 없음(실제로 존재하나 상용x)
	## c, c++ => visual studio.net

	[명령모드 단축기 esc + ]
	input 처음입력, 중간글자 앞에 입력 : i
	글자 다음에 insert :  a (append)
	방향 : h / j / k / l (좌/하/상/우)	방향키ㅇ
	한글자 삭제 : x	줄 삭제 : dd
	아래 새 줄 삽입 : o  
	커서 줄 포함한 아래{n}개의 줄 복사 : {n}+yy
	복붙 : shift+p
	콜론모드 : shift+; ( : ) 
	종료 : : q+enter
	저장 : : w+enter	// 콜론모드진입 및 저장 후 종료 - :wq + enter
	행번호 보이기/숨기기 : :set nu(mber) / :set nonu(mber)
	특정문자열 일괄변경 : :s /{대상문자열}/{바꿀문자열}   + /g (option: 모든대상선택)


	nested 기법

	print """문장"""
	VBA

	shell programming : 리눅스 쉘로 프로그래밍하는 것	

###디렉토리와 파일구조

	/	최상위 디렉토리
	/usr	서브디렉토리, 공유파일
	/bin	명령파일(unix, linux 명령ㅇ)이 있는 방
	/dev	입출력 장치파일이 있는 방
	/etc	관리파일이 있는 방
	/tmp	임시파일 디렉토리
	/lib	라이브러리 "
	/home/ondal	사용자 "

	cd -> change directory  /home/username으로 이동
	ls -> 디렉토리 아래의 목록list 보기
	mkdir -> 디렉토리 생성
	mkdir -p {상위dir}/{하위dir}/... -> 폴더 일괄생성
	-(hyphen) -> option	예) ls -al -> 하위 디렉토리 -[전부all(숨겨진파일포함) 상세히long] 보기
	ls -F (파일명뒤에 종류별 기호붙임. 실행파일: *, 디렉토리: /, 링크파일: @)
	-ali (i-node)
	wc -> word count  -> 결과: 행수 , 단어수 , 글자수(?)
	cp 원본파일 사본파일 -> 원본 복사 사본에 	*dos환경에서 cp>copy
	rmdir -> 디렉토리 제거
		(*디렉토리 하위 공간이 비어있어야 한다.)
	rm *.txt -> 확장자 txt인 모든 파일 제거
		a*.txt -> 이름a로 시작하는 확장자 txt인 모든 파일 
		a12*.txt -> 이름a로 시작하며 3글자인 확장자 txt인 모든 파일
		a*3.txt -> 이름a로 시작하며 마지막이3인 확장자 txt인 모든 파일
	rm -r {디렉토리} -> *디렉토리와 그 하위파일 일괄제거
	rm -rf -> 하위 폴더 및 파일 전부 완전삭제 // 삭제확인알림창x
	mv -> 이동. mv 파일 디렉토리
	mv 디렉토리a/파일  . -> 디렉토리a의 파일을 부모 디렉보티로 이동
	mv 파일a 파일b (a와 b는 같은 디렉토리에 위치) -> a를 b로 rename함과 같음

	##umask
	umask -> 

	##파일묶기, 압축
	tar -cvf aa.tar
	gzip 파일명.tar -> 파일 압축	
		ls -al *.gz -> 압축된 모든 .tar파일보기
		예)
		gzip aa.tar
		la -al *.gz 
		==> aa.tar.gz의 정보 표기

	##압축 풀기
	대상 : (aa.tar.gz)
	gzip -d aa.tar.gz
	(또는, gunzip aa.tar.gz)
	tar -xvf aa.tar.gz

	==> ls 로 압축파일에 있던 파일들이 모두 풀렸는지 확인한다.

	ps -> 현재 실행중인 프로세스 보기
	ps -e : 실행중인 모든 사용자관련 프로세스 보기	//주로 회사에서 전 직원 프로세스 볼 때
	(hyphen e : every)
	ps -a : 현재 로그인 된 단말기관련 프로세스 보기 
	(a : all)
	ps -f : 프로세스에 관한 모든 정보 보기
	(f : ??)
	>> 주로 ps -eaf 를 사용

	ps -eaf | grep ondal : 사용자ondal의 프로세스에 관해서만 출력
	### 프롭프트 삽입	[
	PS1 -> 대문자ps -> 임의로 프롭프트 변경이 가능

	head ~~ -> 출력이 긴 결과를 짧에 앞부분만 보여줌
	 예) head /etc/passwd 
	cat ~~ -> 뒷부분만
	cat -n ~~ -> 긴 목록에 넘버링
	netstat -> 연결된 네트워크 목록
	

	kill -9 ->	

	### 파일권한
	ls -al 파일명 -> 파일에 대한 접근권한 표시

	r -> read
	w -> write 
	x -> execute	d -> directory
	## 폴더권한 기본값.
	rwx == 111(2) == 7(10) ==> "777 권한"	// 폴더권한 maximum값은 777.
	## 파일권한 기본값
	==> 666

	rwx r-x r-x == 7 5 5 ==> "755 mode"
		


	예)
	-rw-rw-r-- 
	>>
	1) 내 권한 -> read, write
	2) (내그룹)디렉토리 권한 -> read, write
	3) 제3자 그룹(타 디렉토리) 권한 -> read

	예2)
	drwxrwxr-x
	>>
	1) 나 -> 디렉토리 접근(d) 및 read, write, 실행
	2) 내 그룹 -> read, write, execute
	3) 3자그룹 -> read, execute


	chmod (change mode )
	chmod 777 bb.txt

	u : user	  g : group		o : other
	


	* 완전삭제
	윈도우 - 보통의 삭제방법(포맷) -> 복구가능. 완전삭제프로그램or하드(물리)제거
	리눅스 - 보통의 경우 복구가 안 됨. 휴지통 개념은 있으나 윈도우에 비해 완전제거가 용이.

	



	coder
	software architect
	guru
	key puncher


	stty -a



	link
	ㄴhard link ,
	  symbolic link
		



	WYSIWYG 위지윅 What you see is  what you get

	rediraction 

	ls > ls2.txt
	cat ls2.txt

	filter & pipes

	




vi   message.txt
   다음과같이 알려줌
   지금 xx 에서 문제발생 

  작전수행

  알다시피 발각이되면 부인
 
  블라블라~~~~~~~~~~

  vi  secureroom.txt
    echo   "******  미션 임파서블 *******"
    mkdir  sbang
    cd sbang
    touch  amho.txt
    cd ~
    cat   message.txt
    echo "******  이 파일은 5초 후에 자동 소멸됨 *****"


  
  mv secureroom.txt   secureroom.sh

   
  실행은   sh   secureroom.sh





0314~


### 새 그루ㅜㅂ추가
	sudo groupadd 그룹명	// 새 그룹 생성 >> 암호입력창
	sudo group 그룹명
	sudo usermod -aG 그룹명 유저명
	sudo adduser --gecos "" 유저명 	
	>> 생성된 그룹 내 새 유저를 생성 // 기존에 useradd로 추가한 유저는 이걸로 넣을 수 없음
	>> 유저명 암호 입력 {mama}

	그룹 확인
	groups wangja
	>> wang그룹에 속해있음이 확인
	
	
	## 유저 전환
	su - wangja	// 유저가 온달 -> 왕자 전환
	pwd 로 왕자 뜨나 확인
	ls -al 로 파일 유저명 왕자 뜨나 확인

	## 유저 삭제
	sudo userdel -r 유저명
	- root모드로 생성한 유저는, rm명령으로 삭제한다.
	
	
	## 그륩에 왕자2만든 후..
	sudo -j -u wangja2 groups
	cat /etc/passwd
	>> 확인

	id wangja	 / id wangja2	// 유저명 아이디 확인


	## root계정으로 돌아가기
	exit
	pwd 로 ondal로 돌아왔는지 확인
	



##########
		리눅스 서버
		db 서버
		SQL - mySQL, MySQL, PLSQL
	
		웹서버 (퍼블리셔)
	front-end html css 개발자
	back-end	java js 개발자
	>>> full stack 위 둘을 모두 함

	브라우저 --  웹 서버(apache: 실습용 무료 서버) -- WAS(tomcat: 무료 WAS) -- DB
	*WAS : Web application server - 데이터 계산기능
	** apache-tomcat 설치 -> 웹 서버와 WAS동시에 구축함



### 윈도우에 java관련 내용 설치
	#. jdk 설치 (*java development kit)	// java구동에 필요한 필수 라이브러리 등 포함된 툴킷

	#. java개발 툴 설치
	c, c++, VB.net, c#.net
	==> Visual Studio.net
	react, js ==> vscode
		oracle | XE
		eclipse IntelliJ

### Eclipse 설치 및 환경조성
	이클립스 압축해제 >> 실행
	workspace폴더 생성 

	- 프로젝트 생성
	new java project > **설치한 jdk버전과 동일하도록 변경 > 확인
			(JRE System Library 뒤에 JavaSE(버전숫자))라고 뜨면 됨

	
	- class구조 생성
	아래 src폴더에 마오 > new class > class이름짓고 아래 method stub~?에 첫번째 옵션(public static void main()만들거냐?)에 체크. > finish

### 자바 프로그램 구조
	[프로젝트 이름]
		class [클래스명] {
		    (문장들);
		
		}
	* class 이름규칙 앞글자 대문자
	* class 이름과 코드 이름 (Hello.java)이 같아야 함. 

### 자바 실행
	hello.java(영어) ===> hello.class(기계어) ===> 메모리 올림 ===> 실행가능한 상태
		      컴파일	인터프리터
	* interpreter : just in time compiler
			jitter
	** c 는 컴파일 과정만으로 실행이 가능. java코드실행이 c보다 느림

	*** 엑박 : 소스코드 넘버링에 오류표기 뜸 // 이게 안뜨는 오류도 종종있음

	* ctrl+space:  메서드 자동완성 기능 이용. 예) sysout치고 ctrl+space누르면 풀력메서드 자동완성




### 자바 웹 서버 개발환경 구축하기
	준비 : 이클립스, 아파치-톰캣
	새 workspace생성 > Create a project... > New Dynamic Web Project > 프로젝트명 짓고 > New runtime클릭 > 서버종류: 아파치-톰캣 선택 (버전도 맞추기) '톰캣 설치 디렉토리' . 브라우즈 > 아팣치톰캣 설치한 위치의 *폴더* 선택(bin폴더 바로위에) > finish
	// bin폴더까지 들어가 선택하면 x

### 웹 만들기
	# 서버 생성
		아래 터미널창에서 Servers클릭 후 파란링크 클릭 > 해당서버와 버전 클릭 후 finish
		>> 익스플로어 아래 Server디렉토리 생성된거 확인

	# html 작성
		익스플로어창의 main\webapp 에 마오 > new HTML 생성 	// Index.html
	#. 서버 가동
		준비: 위 [서버 생성]과정 필요
		*오류: 포트8080이 이미 사용중(oracle에서)이면 가동이 안됨.
			1) 사용중인곳의 8080포트 죽이기(x)
			>> 관리자권한으로 cmd > taskkill /f /pid {8080포트의 pid값}
				
			** 했는데 이러면oracle이 부팅시 8080번을 다시 가져갈진 모름;
			2) 내 서버 포트번호 변경
			>> 아래 서버 클릭 > Html 1.1 포트번호 변경 > 서버 재부팅


	# localtunnel

	node.js 설치 > npm사용가능 > cmd에 npm install -g localtunnel > fund어쩌구 서너줄나오면 됨

	# 이용하기
	cmd에 lt --port 8002(이클립스 서버포트번호) --subdomain {주소명} --print-requests
	>> your url : {주소}.loca.lt 를 줌
		>> 외부가 접속가능한 웹 서버. > 터널 비번설정하는 창 나오면 맨 아래 주소에 나오는 ip 입력 >
	






















































